---
alwaysApply: true
---

# Synapse Project Overview

## Project Architecture

Synapse is a sophisticated Telegram bot powered by Cerebras AI with intelligent conversations and persistent memory. The project follows a clean, modular architecture with clear separation of concerns.

### Core Components

- **[main.py](mdc:main.py)**: Main bot class with Telegram integration, command handling, and user interaction
- **[database.py](mdc:database.py)**: SQLite database management with async operations for users, conversations, and rate limiting
- **[cerebras_client.py](mdc:cerebras_client.py)**: Async Cerebras AI API client with comprehensive error handling and HTML sanitization
- **[langchain_cerebras.py](mdc:langchain_cerebras.py)**: LangChain wrapper for advanced AI workflows and chat management
- **[pyproject.toml](mdc:pyproject.toml)**: Project configuration with UV package management

### Key Technologies

- **Python 3.11+** with async/await patterns
- **UV package manager** for dependency management
- **python-telegram-bot** for Telegram API integration
- **Cerebras Cloud SDK** for ultra-fast AI inference
- **LangChain** for LLM framework support
- **aiosqlite** for async database operations
- **structlog** for structured logging

### Architecture Principles

- **Modular Design**: Clean separation between bot logic, database, and AI client
- **SOLID Principles**: Single responsibility, dependency injection, interface segregation
- **Async-First**: Non-blocking I/O throughout the application
- **Error Resilience**: Comprehensive error handling with graceful degradation
- **User Privacy**: Isolated conversations with rate limiting and fair usage

### Database Schema

- `users`: User profiles, preferences, and model selection
- `conversations`: Chat history and context per user (limited to 40 messages)
- `message_reactions`: Bot interaction tracking
- `rate_limits`: Fair usage enforcement with sliding window

### Key Features

- **Ultra-Fast Responses**: Leveraging Cerebras's cutting-edge speed
- **Conversation Memory**: Maintains context and history for each user
- **Model Selection**: Dynamic switching between available Cerebras models
- **Rate Limiting**: Fair usage controls (10 messages per 60 seconds by default)
- **HTML Sanitization**: Critical HTML parsing error prevention for Telegram
- **Typing Indicators**: Real-time user experience enhancements
