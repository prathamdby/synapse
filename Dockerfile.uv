# Alternative Dockerfile using uv (for environments with internet access)
FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    UV_CACHE_DIR=/tmp/.uv-cache

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Install uv using the official installer
RUN curl -LsSf https://astral.sh/uv/install.sh | sh

# Add uv to PATH
ENV PATH="/root/.local/bin:$PATH"

# Create app directory
WORKDIR /app

# Copy all project files
COPY . .

# Install dependencies using uv
RUN uv sync --no-dev

# Create directory for database (if using file-based SQLite)
RUN mkdir -p /app/data

# Set the default database path to the data directory
ENV DATABASE_PATH=/app/data/bot_database.db

# Expose port (if needed for health checks or monitoring)
EXPOSE 8000

# Create a non-root user for security
RUN adduser --disabled-password --gecos '' --uid 1000 appuser && \
    chown -R appuser:appuser /app
USER appuser

# Run the application using uv
CMD ["uv", "run", "python", "main.py"]